{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","Contexts/FavoritesContext.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","pages/Favorites/style.js","constant.js","components/Button/Button.js","pages/Favorites/Favorites.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","FavoritesContext","React","createContext","useFavorites","useContext","FavoritesProvider","useState","JSON","parse","localStorage","getItem","favorites","setFavorites","useEffect","setItem","stringify","applyFavorite","user","array","Object","values","includes","filter","item","push","clearFavorites","Provider","users","isLoading","emptyMessage","hoveredUserId","setHoveredUserId","isFiltered","setIsFiltered","filters","setFilters","userCount","handleMouseLeave","handleCheckBoxChange","event","isFavorite","map","index","location","country","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","name","title","first","last","email","street","number","city","IconButton","onClick","handleIconClick","Home","Content","Header","setUsers","setIsLoading","fetchUsers","a","axios","get","response","data","results","usePeopleFetch","SIZE","VARIANT","COLORS","Button","C","disabled","Favorites","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","routes","useLocation","pathname","setValue","AppBar","position","style","top","Tabs","_e","newValue","aria-label","indicatorColor","textColor","Tab","component","Link","to","AppRouter","exact","path","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7fb1bcde.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const handleChange = () => {\r\n    onChange && onChange(value);\r\n  };\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\n\r\nconst FavoritesContext = React.createContext()\r\n\r\nexport function useFavorites() {\r\n    return useContext(FavoritesContext);\r\n}\r\n\r\nexport function FavoritesProvider( { children } ) {\r\n    // try to retreive favorites from local storage\r\n    const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')) || [])\r\n\r\n    // store the favorites on local storage\r\n    useEffect(() => {\r\n        localStorage.setItem('favorites', JSON.stringify(favorites));\r\n    }, [favorites])\r\n\r\n    // add or remove a user from favorites list\r\n    function applyFavorite(user) {\r\n        // get an array from the state variable tou use the 'includes' method, and avoid changing the state directly\r\n        let array =  Object.values(favorites)\r\n\r\n        if (array.includes(user)) { // remove user from favorites\r\n            array = array.filter(item => item !== user);\r\n        } else {                    // add user to favorites\r\n            array.push(user)\r\n        }\r\n        setFavorites(array)\r\n    }\r\n\r\n    const clearFavorites = () => {\r\n        setFavorites([])\r\n        localStorage.setItem('favorites', null);\r\n    }\r\n\r\n    // exported values/ methods, accessible to all children\r\n    const value = {\r\n        favorites,\r\n        applyFavorite,\r\n        clearFavorites\r\n    }\r\n\r\n    return (\r\n        <FavoritesContext.Provider value ={value}>\r\n            {children}\r\n        </FavoritesContext.Provider>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\nimport { useFavorites } from \"Contexts/FavoritesContext\";\r\n\r\nconst UserList = ({ users, isLoading, emptyMessage }) => {\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  // a context for manipulating the favorites list\r\n  const { favorites, applyFavorite } = useFavorites()\r\n  // a boolean indicating rather a filter has been turned on or not\r\n  const [isFiltered,setIsFiltered] = useState(false)\r\n  // a list of all active filters\r\n  const [filters, setFilters] = useState([]);\r\n  // displayed users count\r\n  // const [userCount, setUserCount] = useState(0)\r\n  var userCount = 0;\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  // after a filter has been changed, check if any filters are still active, and set isFiltered accordingly\r\n  useEffect(() => {\r\n    for (const filter of Object.values(filters)) {\r\n      if (filter) {\r\n        setIsFiltered(true);\r\n        return;\r\n      }\r\n    }\r\n    setIsFiltered(false);\r\n  }, [filters])\r\n\r\n  const handleCheckBoxChange = (event) => {\r\n    setFilters({...filters, [event] : !filters[event]});\r\n  }\r\n\r\n  const handleIconClick = (user) => {\r\n    applyFavorite(user)\r\n  }\r\n\r\n  function isFavorite(user) {\r\n    const array =  Object.values(favorites)\r\n    if (array.includes(user))\r\n      return 1\r\n    return 0\r\n  }\r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        <CheckBox value=\"Brazil\" label=\"Brazil\" onChange={handleCheckBoxChange} />\r\n        <CheckBox value=\"Australia\" label=\"Australia\" onChange={handleCheckBoxChange} />\r\n        <CheckBox value=\"Canada\" label=\"Canada\" onChange={handleCheckBoxChange} />\r\n        <CheckBox value=\"Germany\" label=\"Germany\" onChange={handleCheckBoxChange} />\r\n        <CheckBox value=\"Netherlands\" label=\"Netherlands\" onChange={handleCheckBoxChange} />\r\n      </S.Filters>\r\n      <S.List>\r\n        {users.map((user, index) => {\r\n          // render the user, if it matches the current filters, or no filters are active\r\n          if (!isFiltered || filters[user.location.country]) {\r\n            userCount++;\r\n            return (\r\n                <S.User\r\n                  key={index}\r\n                  onMouseEnter={() => handleMouseEnter(index)}\r\n                  onMouseLeave={handleMouseLeave}\r\n                >\r\n                  <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n                  <S.UserInfo>\r\n                    <Text size=\"22px\" bold>\r\n                      {user?.name.title} {user?.name.first} {user?.name.last}\r\n                    </Text>\r\n                    <Text size=\"14px\">{user?.email}</Text>\r\n                    <Text size=\"14px\">\r\n                      {user?.location.street.number} {user?.location.street.name}\r\n                    </Text>\r\n                    <Text size=\"14px\">\r\n                      {user?.location.city} {user?.location.country}\r\n                    </Text>\r\n                  </S.UserInfo>\r\n                  <S.IconButtonWrapper isVisible={isFavorite(user) || index === hoveredUserId}>\r\n                    <IconButton onClick={() => handleIconClick(user, index)}>\r\n                      <FavoriteIcon color=\"error\" />\r\n                    </IconButton>\r\n                  </S.IconButtonWrapper>\r\n                </S.User>\r\n            );\r\n          } else\r\n            return null\r\n        })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n        {!isLoading && userCount == 0 && (\r\n          <Text size=\"30px\">\r\n            {emptyMessage}\r\n          </Text>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  const { users, isLoading } = usePeopleFetch();\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={users} isLoading={isLoading} emptyMessage={\"No users found. Try another filter.\"}/>\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\r\n    setIsLoading(false);\r\n    setUsers(response.data.results);\r\n  }\r\n\r\n  return { users, isLoading, fetchUsers };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n","export const SIZE = {\r\n  small: \"small\",\r\n  medium: \"medium\",\r\n  large: \"large\",\r\n};\r\n\r\nexport const VARIANT = {\r\n  text: \"text\",\r\n  filled: \"filled\",\r\n  outlined: \"outlined\",\r\n  standard: \"standard\",\r\n  contained: \"contained\",\r\n};\r\n\r\nexport const COLORS = {\r\n  default: \"default\",\r\n  inherit: \"inherit\",\r\n  primary: \"primary\",\r\n  secondary: \"secondary\",\r\n};\r\n","import React from \"react\";\r\nimport { Button as MuiButton } from \"@material-ui/core\";\r\nimport * as C from \"constant\";\r\n\r\nconst Button = ({\r\n  label,\r\n  color = C.COLORS.default,\r\n  disabled,\r\n  size = C.SIZE.medium,\r\n  variant = C.VARIANT.standard,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <MuiButton\r\n      onClick={onClick}\r\n      color={color}\r\n      disabled={disabled}\r\n      size={size}\r\n      variant={variant}\r\n    >\r\n      {label}\r\n    </MuiButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport * as S from \"./style\";\r\nimport { useFavorites } from \"Contexts/FavoritesContext\";\r\nimport Button from '../../components/Button'\r\nimport * as C from \"constant\";\r\n\r\nconst Favorites = () => {\r\n  const { favorites, clearFavorites } = useFavorites();\r\n\r\n  const handleClearClick = () => {\r\n    clearFavorites();\r\n  }\r\n\r\n  return (\r\n    <S.Content>\r\n      <S.Header>\r\n        <Text size=\"64px\" bold>\r\n        Favorites\r\n        </Text>\r\n      </S.Header>\r\n        <Button label={'Clear Favorites'} color={C.COLORS.secondary} variant={C.VARIANT.outlined} onClick={handleClearClick}/>\r\n        <br/>\r\n        <UserList users={favorites} isLoading={false} emptyMessage={'No favorites.\\n Try adding some by clicking their heart icon!'}/>\r\n    </S.Content>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { Link, useLocation  } from \"react-router-dom\";\r\n\r\n\r\nconst NavBar = () => {\r\n  const routes = ['/', '/Favorites']\r\n  // set the navbar to the correct position on load\r\n  const location = useLocation()\r\n  const [value, setValue] = useState(location.pathname); \r\n\r\n  const handleChange = (_e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" value={routes[0]} component={Link} to={routes[0]} />\r\n        <Tab label=\"Favorites\" value={routes[1]} component={Link} to={routes[1]} />\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home, Favorites } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\nimport { FavoritesProvider } from \"./Contexts/FavoritesContext\"\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n          <FavoritesProvider>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route path=\"/Favorites\" component={Favorites} />\r\n            </Switch>\r\n          </FavoritesProvider>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}